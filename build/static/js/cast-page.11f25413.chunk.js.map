{"version":3,"sources":["components/CastItem/CastItem.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","icon/default.jpg","components/CastItem/CastItem.module.css","components/CastList/CastList.module.css"],"names":["CastItem","name","foto","character","className","s","item","image","src","avatar","alt","CastList","casts","list","map","id","profile_path","Status","Cast","useState","setCasts","error","setError","status","setStatus","useEffect","api","fetchCast","then","cast","length","toast","catch","Spinner","message","module","exports"],"mappings":"kMA4BeA,EAxBE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC9B,OACE,sBAAKC,UAAWC,IAAEC,KAAlB,UACE,qBACEF,UAAWC,IAAEE,MACbC,IACEN,EAAI,wDACiDA,GACjDO,IAENC,IAAKT,IAEP,oBAAIG,UAAWC,IAAEJ,KAAjB,SAAwBA,IACxB,mBAAGG,UAAWC,IAAEF,UAAhB,SAA4BA,MAGjC,E,iBCAcQ,EAhBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,oBAAIR,UAAWC,IAAEQ,KAAjB,SACGD,EAAME,KAAI,gBAAGC,EAAH,EAAGA,GAAId,EAAP,EAAOA,KAAMe,EAAb,EAAaA,aAAcb,EAA3B,EAA2BA,UAA3B,OACT,oBAAaC,UAAWC,IAAEC,KAA1B,SACE,cAAC,EAAD,CAAUL,KAAMA,EAAMC,KAAMc,EAAcb,UAAWA,KAD9CY,EADA,KAOhB,E,wBCNKE,G,MACE,QADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WA2CGC,UAxCF,SAAC,GAAY,IAAVH,EAAS,EAATA,GAAS,EACGI,mBAAS,IADZ,mBAChBP,EADgB,KACTQ,EADS,OAEGD,mBAAS,MAFZ,mBAEhBE,EAFgB,KAETC,EAFS,OAGKH,mBAASF,GAHd,mBAGhBM,EAHgB,KAGRC,EAHQ,KAyBvB,OApBAC,qBAAU,WACRD,EAAUP,GAEVS,IACGC,UAAUZ,GACVa,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,GAAoB,IAAhBA,EAAKC,OAGP,OAFAC,IAAMV,MAAM,oBACZG,EAAUP,GAGZG,EAASS,GACTL,EAAUP,EACX,IACAe,OAAM,SAAAX,GACLC,EAASD,GACTG,EAAUP,EACX,GACJ,GAAE,CAACF,IAGF,qCACGQ,IAAWN,GAAkB,cAACgB,EAAA,EAAD,IAE7BV,IAAWN,GAAmB,cAAC,EAAD,CAAUL,MAAOA,IAE/CW,IAAWN,GAAmB,6BAAKI,EAAMa,YAG/C,C,kCCjDc,QAA0B,mC,0CCCzCC,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,wBAAwB,UAAY,4B,qBCA1HD,EAAOC,QAAU,CAAC,KAAO,uB","file":"static/js/cast-page.11f25413.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport avatar from 'icon/default.jpg';\nimport s from './CastItem.module.css';\n\nconst CastItem = ({ name, foto, character }) => {\n  return (\n    <div className={s.item}>\n      <img\n        className={s.image}\n        src={\n          foto\n            ? `http://image.tmdb.org/t/p/w300_and_h450_bestv2${foto}`\n            : avatar\n        }\n        alt={name}\n      />\n      <h3 className={s.name}>{name}</h3>\n      <p className={s.character}>{character}</p>\n    </div>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  foto: PropTypes.string,\n  character: PropTypes.string.isRequired,\n};\n\nexport default CastItem;\n","import PropTypes from 'prop-types';\nimport CastItem from '../CastItem/CastItem';\nimport s from './CastList.module.css';\n\nconst CastList = ({ casts }) => {\n  return (\n    <ul className={s.list}>\n      {casts.map(({ id, name, profile_path, character }) => (\n        <li key={id} className={s.item}>\n          <CastItem name={name} foto={profile_path} character={character} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  casts: PropTypes.array.isRequired,\n};\n\nexport default CastList;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CastList from '../CastList/CastList';\nimport Spinner from '../Spinner/Spinner';\nimport api from 'services/movies-api';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Cast = ({ id }) => {\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    api\n      .fetchCast(id)\n      .then(({ cast }) => {\n        if (cast.length === 0) {\n          toast.error('No results!');\n          setStatus(Status.IDLE);\n          return;\n        }\n        setCasts(cast);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [id]);\n\n  return (\n    <>\n      {status === Status.PENDING && <Spinner />}\n\n      {status === Status.RESOLVED && <CastList casts={casts} />}\n\n      {status === Status.REJECTED && <h1>{error.message}</h1>}\n    </>\n  );\n};\n\nCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CastItem_item__3_iqn\",\"name\":\"CastItem_name__3o27Q\",\"image\":\"CastItem_image__28FCQ\",\"character\":\"CastItem_character__2aDX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CastList_list__3w4-r\"};"],"sourceRoot":""}