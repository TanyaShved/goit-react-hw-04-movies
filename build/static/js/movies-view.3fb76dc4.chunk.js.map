{"version":3,"sources":["components/Searchbar/Searchbar.jsx","views/MoviesPage.jsx","services/movies-api.js","icon/default.jpg","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.module.css","styles/stylesPagination.js","components/Searchbar/Searcbar.module.css"],"names":["Searcbar","useState","movieName","setMovieName","location","useLocation","history","useHistory","className","s","Searchbar","SearchForm","type","onClick","e","preventDefault","push","search","target","form","value","trim","toast","warn","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","name","id","onChange","currentTarget","toLowerCase","Status","MoviesPage","findFilms","setFindFilms","error","setError","status","setStatus","totalPage","setTotalPage","classes","useStyles","page","URLSearchParams","get","useEffect","findForMovies","query","api","fetchMovieByName","then","results","total_pages","length","Promise","reject","Error","catch","Spinner","MoviesList","movies","Pagination","root","count","_","Number","showFirstButton","showLastButton","size","message","API_KEY","BASE_URL","fetchPopularMovies","fetch","response","ok","json","fetchMovieInfo","fetchCast","fetchReviews","fetchModalForTrailler","main","list","map","string","title","poster_path","vote_average","item","to","pathname","slugify","lower","state","from","src","avatar","alt","width","poster","info","rating","module","exports","makeStyles","display","justifyContent","backgroundColor","color","opacity"],"mappings":"iOA0DeA,EApDE,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACdC,EADc,KACHC,EADG,KAEfC,EAAWC,cACXC,EAAUC,cAsBhB,OACE,wBAAQC,UAAWC,IAAEC,UAArB,SACE,uBAAMF,UAAWC,IAAEE,WAAnB,UACE,wBACEC,KAAK,SACLC,QArBa,SAAAC,GACnBA,EAAEC,iBAEFT,EAAQU,KAAR,2BACKZ,GADL,IAEEa,OAAO,SAAD,OAAWH,EAAEI,OAAOC,KAAKjB,UAAUkB,UAIlB,KAArBlB,EAAUmB,OAIdlB,EAAa,IAHXmB,IAAMC,KAAK,iGAYPf,UAAWC,IAAEe,kBAHf,SAKE,sBAAMhB,UAAWC,IAAEgB,wBAAnB,sBAGF,uBACEjB,UAAWC,IAAEiB,iBACbd,KAAK,OACLe,aAAa,MACbC,WAAS,EACTC,YAAY,eACZT,MAAOlB,EACP4B,KAAK,YACLC,GAAG,GACHC,SAxCiB,SAAAlB,GACvBX,EAAaW,EAAEmB,cAAcb,MAAMc,wB,iCCHjCC,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAyEGC,UAtEI,WAAO,IAAD,IACWnC,mBAAS,IADpB,mBAChBoC,EADgB,KACLC,EADK,OAEGrC,mBAAS,MAFZ,mBAEhBsC,EAFgB,KAETC,EAFS,OAGKvC,mBAASkC,GAHd,mBAGhBM,EAHgB,KAGRC,EAHQ,OAIWzC,mBAAS,GAJpB,mBAIhB0C,EAJgB,KAILC,EAJK,KAMjBC,EAAUC,cACVxC,EAAUC,cACVH,EAAWC,cAEX0C,EAAI,UAAG,IAAIC,gBAAgB5C,EAASa,QAAQgC,IAAI,eAA5C,QAAuD,EAEjEC,qBAAU,WACgB,KAApB9C,EAASa,QAIbkC,EAAc,IAAIH,gBAAgB5C,EAASa,QAAQgC,IAAI,YACtD,CAAC7C,EAASa,SAEb,IAAMkC,EAAgB,SAACC,EAAOL,GAC5BM,IACGC,iBAAiBF,EAAOL,GACxBQ,MAAK,YAA+B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAChB,OAAuB,IAAnBD,EAAQE,QACVpB,EAAakB,GACbZ,EAAaa,QACbf,EAAUP,IAGLwB,QAAQC,OAAO,IAAIC,MAAJ,wCAEvBC,OAAM,SAAAvB,GACLC,EAASD,GACTG,EAAUP,OAQhB,OACE,iCACE,cAACzB,EAAD,IAEC+B,IAAWN,GAAkB,cAAC4B,EAAA,EAAD,IAE7BtB,IAAWN,GACV,qCACGE,GAAa,cAAC2B,EAAA,EAAD,CAAYC,OAAQ5B,IACjCM,EAAY,GACX,cAACuB,EAAA,EAAD,CACE1D,UAAWqC,EAAQsB,KACnBC,MAAOzB,EACPX,SAjBS,SAACqC,EAAGtB,GACvBzC,EAAQU,KAAR,2BAAkBZ,GAAlB,IAA4Ba,OAAO,QAAD,OAAU8B,OAiBlCA,KAAMuB,OAAOvB,GACbwB,iBAAe,EACfC,gBAAc,EACdC,KAAK,aAMZhC,IAAWN,GAAmB,6BAAKI,EAAMmC,e,gCCjFhD,IAAMC,EAAU,mCACVC,EAAW,+BAoEXvB,EAAM,CACVwB,mBAnEyB,SAAA9B,GACzB,OAAO+B,MAAM,GAAD,OACPF,EADO,uCACgCD,EADhC,iBACgD5B,IAC1DQ,MAAK,SAAAwB,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXtB,QAAQC,OAAO,IAAIC,MAAJ,qCA6DxBqB,eAzDqB,SAAAnD,GACrB,OAAO+C,MAAM,GAAD,OACPF,EADO,kBACW7C,EADX,oBACyB4C,EADzB,oBAEVpB,MAAK,SAAAwB,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXtB,QAAQC,OAAO,IAAIC,MAAJ,yCAmDxBP,iBA/CuB,SAACpD,EAAW6C,GACnC,OAAO+B,MAAM,GAAD,OACPF,EADO,iCAC0BD,EAD1B,iCAC0DzE,EAD1D,iBAC4E6C,IACtFQ,MAAK,SAAAwB,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXtB,QAAQC,OAAO,IAAIC,MAAJ,yCAyCxBsB,UArCgB,SAAApD,GAChB,OAAO+C,MAAM,GAAD,OACPF,EADO,kBACW7C,EADX,4BACiC4C,EADjC,oBAEVpB,MAAK,SAAAwB,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXtB,QAAQC,OAAO,IAAIC,MAAJ,yCA+BxBuB,aA3BmB,SAAArD,GACnB,OAAO+C,MAAM,GAAD,OACPF,EADO,kBACW7C,EADX,4BACiC4C,EADjC,2BAEVpB,MAAK,SAAAwB,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXtB,QAAQC,OAAO,IAAIC,MAAJ,yCAqBxBwB,sBAjB4B,SAAAtD,GAC5B,OAAO+C,MAAM,GAAD,OACPF,EADO,kBACW7C,EADX,2BACgC4C,EADhC,oBAEVpB,MAAK,SAAAwB,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXtB,QAAQC,OAAO,IAAIC,MAAJ,4CAaXR,O,gCC9EA,QAA0B,qC,yHCwD1BW,IAhDI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd7D,EAAWC,cAEjB,OACE,mCACE,sBAAMG,UAAWC,IAAE6E,KAAnB,SACE,oBAAI9E,UAAWC,IAAE8E,KAAjB,SACGtB,EAAOuB,KAAI,gBATLC,EASQC,EAAH,EAAGA,MAAO3D,EAAV,EAAUA,GAAID,EAAd,EAAcA,KAAM6D,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,aAAjC,OACV,oBAAapF,UAAWC,IAAEoF,KAA1B,SACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,QAbTN,EAa+B,GAAD,OACtBC,EADsB,YACb3D,GAdPiE,IAAQP,EAAQ,CAAEQ,OAAO,MAgBlCC,MAAO,CAAEC,KAAM/F,IALnB,SAQE,oCACE,qBACEgG,IACET,EAAW,0CAC4BA,GACnCU,IAENC,IAAKZ,EACLa,MAAM,OACN/F,UAAWC,IAAE+F,SAEf,qBAAKhG,UAAWC,IAAEgG,KAAlB,SACE,qBAAIjG,UAAWC,IAAEiF,MAAjB,UACGA,GAAgB5D,EACjB,sBAAMtB,UAAWC,IAAEiG,OAAnB,SAA4Bd,eAvB7B7D,c,mBCfrB4E,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,OAAS,2BAA2B,OAAS,6B,gCCDjM,aAEM9D,EAAY+D,YAAW,CAC3B1C,KAAM,CACJ2C,QAAS,OACTC,eAAgB,SAChB,8NAA+N,CAC7NC,gBAAiB,UACjBC,MAAO,SAET,4BAA6B,CAC3BA,MAAO,SAET,8EAA+E,CAC7EC,QAAS,OAEX,wGAAyG,CACvGA,QAAS,KAEX,sBAAuB,CACrBH,eAAgB,aAKPjE,O,mBCxBf6D,EAAOC,QAAU,CAAC,UAAY,4BAA4B,WAAa,6BAA6B,kBAAoB,oCAAoC,wBAA0B,0CAA0C,iBAAmB","file":"static/js/movies-view.3fb76dc4.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Searcbar.module.css';\n\nconst Searcbar = () => {\n  const [movieName, setMovieName] = useState('');\n  const location = useLocation();\n  const history = useHistory();\n\n  const handelNameChange = e => {\n    setMovieName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n\n    history.push({\n      ...location,\n      search: `query=${e.target.form.movieName.value}`,\n    });\n\n    // проверяем не пустой ли нам инпут\n    if (movieName.trim() === '') {\n      toast.warn('Ввидите название!');\n      return;\n    }\n    setMovieName('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm}>\n        <button\n          type=\"submit\"\n          onClick={handelSubmit}\n          className={s.SearchForm_button}\n        >\n          <span className={s.SearchForm_button_label}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchForm_input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={movieName}\n          name=\"movieName\"\n          id=\"\"\n          onChange={handelNameChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searcbar;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport Spinner from 'components/Spinner/Spinner';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport useStyles from 'styles/stylesPagination';\nimport { Pagination } from '@material-ui/lab';\nimport api from 'services/movies-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MoviesPage = () => {\n  const [findFilms, setFindFilms] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [totalPage, setTotalPage] = useState(0);\n\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const page = new URLSearchParams(location.search).get('page') ?? 1;\n\n  useEffect(() => {\n    if (location.search === '') {\n      return;\n    }\n\n    findForMovies(new URLSearchParams(location.search).get('query'));\n  }, [location.search]);\n\n  const findForMovies = (query, page) => {\n    api\n      .fetchMovieByName(query, page)\n      .then(({ results, total_pages }) => {\n        if (results.length !== 0) {\n          setFindFilms(results);\n          setTotalPage(total_pages);\n          setStatus(Status.RESOLVED);\n          return;\n        }\n        return Promise.reject(new Error(`Sorry. This movie was not found!`));\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n\n  const onHandlePage = (_, page) => {\n    history.push({ ...location, search: `page=${page}` });\n  };\n\n  return (\n    <main>\n      <Searchbar />\n\n      {status === Status.PENDING && <Spinner />}\n\n      {status === Status.RESOLVED && (\n        <>\n          {findFilms && <MoviesList movies={findFilms} />}\n          {totalPage > 1 && (\n            <Pagination\n              className={classes.root}\n              count={totalPage}\n              onChange={onHandlePage}\n              page={Number(page)}\n              showFirstButton\n              showLastButton\n              size=\"large\"\n            />\n          )}\n        </>\n      )}\n\n      {status === Status.REJECTED && <h1>{error.message}</h1>}\n    </main>\n  );\n};\n\nexport default MoviesPage;\n","const API_KEY = 'c1ded0bfb98f51bbb3c132d34092ee93';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchPopularMovies = page => {\n  return fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Sorry, Something came wrong!`));\n  });\n};\n\nconst fetchMovieInfo = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Sorry. This movie was not found!`));\n  });\n};\n\nconst fetchMovieByName = (movieName, page) => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=${page}`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Sorry. This movie was not found!`));\n  });\n};\n\nconst fetchCast = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Sorry. This movie was not found!`));\n  });\n};\n\nconst fetchReviews = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Sorry. This movie was not found!`));\n  });\n};\n\nconst fetchModalForTrailler = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=en-US`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Sorry. This trailer was not found!`));\n  });\n};\n\nconst api = {\n  fetchPopularMovies,\n  fetchMovieInfo,\n  fetchMovieByName,\n  fetchCast,\n  fetchReviews,\n  fetchModalForTrailler,\n};\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport slugify from 'slugify';\nimport avatar from 'icon/default.jpg';\nimport s from './MoviesList.module.css';\n\nconst makeSlug = string => slugify(string, { lower: true });\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <main className={s.main}>\n        <ul className={s.list}>\n          {movies.map(({ title, id, name, poster_path, vote_average }) => (\n            <li key={id} className={s.item}>\n              <Link\n                to={{\n                  pathname: `/movies/${makeSlug(\n                      `${title} ${id}`,\n                    )}`,\n                  state: { from: location },\n                }}\n              >\n                <article>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : avatar\n                    }\n                    alt={title}\n                    width=\"100%\"\n                    className={s.poster}\n                  />\n                  <div className={s.info}>\n                    <h2 className={s.title}>\n                      {title ? title : name}\n                      <span className={s.rating}>{vote_average}</span>\n                    </h2>\n                  </div>\n                </article>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MoviesList_main__107gs\",\"list\":\"MoviesList_list__1lRBZ\",\"item\":\"MoviesList_item__1Rt4r\",\"title\":\"MoviesList_title__2o3hp\",\"poster\":\"MoviesList_poster__17HKy\",\"rating\":\"MoviesList_rating__3Fyds\"};","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& .MuiPaginationItem-page.Mui-selected, & .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible,  & .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible': {\n      backgroundColor: '#ff6b08',\n      color: 'white',\n    },\n    '& .MuiPaginationItem-root': {\n      color: 'bleak',\n    },\n    '& .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible': {\n      opacity: '0.7',\n    },\n    '& .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible': {\n      opacity: '1',\n    },\n    '& .MuiPagination-ul': {\n      justifyContent: 'center',\n    },\n  },\n});\n\nexport default useStyles;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searcbar_Searchbar__srXIb\",\"SearchForm\":\"Searcbar_SearchForm__P4C8_\",\"SearchForm_button\":\"Searcbar_SearchForm_button__1CVq2\",\"SearchForm_button_label\":\"Searcbar_SearchForm_button_label__1B5iQ\",\"SearchForm_input\":\"Searcbar_SearchForm_input__1YCxI\"};"],"sourceRoot":""}